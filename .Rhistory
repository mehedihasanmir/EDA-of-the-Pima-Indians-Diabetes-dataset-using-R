# Your code here
df %>%
ggplot(aes(x = Outcome, y = Glucose))+
geom_boxplot()+
geom_jitter()
# Your code here
df %>%
ggplot(aes(x = Outcome, y = Glucose))+
geom_boxplot()+
# Your code here
df %>%
ggplot(aes(x = Outcome, y = Glucose))+
geom_boxplot()
df %>%
ggplot(aes(x = Outcome, y = Insulin))+
geom_boxplot()+
geom_jitter()
df %>%
ggplot(aes(x = Outcome, y = Age))+
geom_boxplot()+
geom_jitter()
df %>%
ggplot(aes(x = Outcome, y = BMI))+
geom_boxplot()+
geom_jitter()
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, warning = FALSE, message = FALSE)
library(dplyr)
library(knitr)
library(DescTools)
library(ggplot2)
df = read.csv("Data/Kaggle - Pima Indians Diabetes Database.csv")
head(df)
# Your code here
df$Outcome = as.factor(df$Outcome)
class(df$Outcome)
calculating = function(colum){
colum = as.numeric(colum)
mean_value = mean(colum, )
median_value = median(colum)
mode_value = Mode(colum)
min_value = min(colum)
standard_value = sd(colum)
max_value = max(colum)
quantile = quantile(colum)
first_quantile = quantile(colum, 0.25)
third_quantile = quantile(colum, 0.75)
iqr_range = IQR(colum)
return(list(
mean = mean_value,
median = median_value,
mode= mode_value,
min = min_value,
max = max_value,
standard_deviation = standard_value,
quantile_ = quantile,
firstQuantile = first_quantile,
thirdQuantile = third_quantile,
iqrRange = iqr_range
))
}
calculating(df$Pregnancies)
calculating(df$Glucose)
calculating(df$BloodPressure)
calculating(df$SkinThickness)
calculating(df$Insulin)
calculating(df$BMI)
calculating(df$DiabetesPedigreeFunction)
calculating(df$Age)
calculating(df$Outcome)
# Your code here
yes_outcone = df %>%
filter(Outcome == 1)
count(yes_outcone)
# Your code here
histplot = function(colum){
colum = as.numeric(colum)
ggplot(data = df) +
geom_histogram(aes(x = colum, fill = Outcome, colour = "black", alpha = 0.8),
bins = 20)
}
histplot(df$Pregnancies)
histplot(df$Glucose)
histplot(df$BloodPressure)
histplot(df$SkinThickness)
histplot(df$Insulin)
# Your code here
df %>%
ggplot(aes(x = Outcome, y = Glucose))+
geom_boxplot()+
geom_jitter()
df %>%
ggplot(aes(x = Outcome, y = Insulin))+
geom_boxplot()+
geom_jitter()
df %>%
ggplot(aes(x = Outcome, y = BMI))+
geom_boxplot()+
geom_jitter()
df %>%
ggplot(aes(x = Outcome, y = Age))+
geom_boxplot()+
geom_jitter()
# Your code here
null_column = colSums(is.na(df))
null_column
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
zero_col
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
zero_col
head(df)
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
zero_col
df
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
zero_col
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
zero_col
df1[df == 0] = NA
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
zero_col
df1 = df[df == 0] = NA
df1
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
zero_col
df[df == 0] = NA
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
df[df == 0] <- NA
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
df[df == 0] <- NA
df
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
df[df == 0] = NA
df
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
df[df == 0] = NA
head(df)
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
head(df)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, warning = FALSE, message = FALSE)
library(dplyr)
library(knitr)
library(DescTools)
library(ggplot2)
df = read.csv("Data/Kaggle - Pima Indians Diabetes Database.csv")
head(df)
# Your code here
df$Outcome = as.factor(df$Outcome)
class(df$Outcome)
calculating = function(colum){
colum = as.numeric(colum)
mean_value = mean(colum, )
median_value = median(colum)
mode_value = Mode(colum)
min_value = min(colum)
standard_value = sd(colum)
max_value = max(colum)
quantile = quantile(colum)
first_quantile = quantile(colum, 0.25)
third_quantile = quantile(colum, 0.75)
iqr_range = IQR(colum)
return(list(
mean = mean_value,
median = median_value,
mode= mode_value,
min = min_value,
max = max_value,
standard_deviation = standard_value,
quantile_ = quantile,
firstQuantile = first_quantile,
thirdQuantile = third_quantile,
iqrRange = iqr_range
))
}
calculating(df$Pregnancies)
calculating(df$Glucose)
calculating(df$BloodPressure)
calculating(df$SkinThickness)
calculating(df$Insulin)
calculating(df$BMI)
calculating(df$DiabetesPedigreeFunction)
calculating(df$Age)
calculating(df$Outcome)
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
head(df)
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
zero_col
# Your code here
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
df$Glucose[df$Glucose == 0] = NA
df$BloodPressure[df$BloodPressure == 0] = NA
df$SkinThickness[df$SkinThickness == 0] = NA
df$BMI[df$BMI == 0] = NA
head(df)
# Your code here
df$Outcome = as.factor(df$Outcome)
class(df$Outcome)
calculating = function(colum){
colum = as.numeric(colum)
mean_value = mean(colum, )
median_value = median(colum)
mode_value = Mode(colum)
min_value = min(colum)
standard_value = sd(colum)
max_value = max(colum)
quantile = quantile(colum)
first_quantile = quantile(colum, 0.25)
third_quantile = quantile(colum, 0.75)
iqr_range = IQR(colum)
return(list(
mean = mean_value,
median = median_value,
mode= mode_value,
min = min_value,
max = max_value,
standard_deviation = standard_value,
quantile_ = quantile,
firstQuantile = first_quantile,
thirdQuantile = third_quantile,
iqrRange = iqr_range
))
}
calculating(df$Pregnancies)
calculating(df$Glucose)
# Your code here
df$Outcome = as.factor(df$Outcome)
class(df$Outcome)
calculating = function(colum){
colum = as.numeric(colum)
mean_value = mean(colum, )
median_value = median(colum)
mode_value = Mode(colum)
min_value = min(colum)
standard_value = sd(colum)
max_value = max(colum)
quantile = quantile(colum)
first_quantile = quantile(colum, 0.25)
third_quantile = quantile(colum, 0.75)
iqr_range = IQR(colum)
return(list(
mean = mean_value,
median = median_value,
mode= mode_value,
min = min_value,
max = max_value,
standard_deviation = standard_value,
quantile_ = quantile,
firstQuantile = first_quantile,
thirdQuantile = third_quantile,
iqrRange = iqr_range
))
}
calculating(df$Pregnancies)
calculating(df$Glucose)
df = read.csv("Data/Kaggle - Pima Indians Diabetes Database.csv")
head(df)
# Your code here
df$Outcome = as.factor(df$Outcome)
class(df$Outcome)
calculating = function(colum){
colum = as.numeric(colum)
mean_value = mean(colum, )
median_value = median(colum)
mode_value = Mode(colum)
min_value = min(colum)
standard_value = sd(colum)
max_value = max(colum)
quantile = quantile(colum)
first_quantile = quantile(colum, 0.25)
third_quantile = quantile(colum, 0.75)
iqr_range = IQR(colum)
return(list(
mean = mean_value,
median = median_value,
mode= mode_value,
min = min_value,
max = max_value,
standard_deviation = standard_value,
quantile_ = quantile,
firstQuantile = first_quantile,
thirdQuantile = third_quantile,
iqrRange = iqr_range
))
}
calculating(df$Pregnancies)
calculating(df$Glucose)
calculating(df$BloodPressure)
calculating(df$SkinThickness)
calculating(df$Insulin)
calculating(df$BMI)
calculating(df$DiabetesPedigreeFunction)
calculating(df$Age)
calculating(df$Outcome)
# Your code here
yes_outcone = df %>%
filter(Outcome == 1)
count(yes_outcone)
library(dplyr)
library(knitr)
library(DescTools)
library(ggplot2)
library(naniar)
airquality$Ozone
airquality
miss_var_summary(df)
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
df$Glucose[df$Glucose == 0] = NA
df$BloodPressure[df$BloodPressure == 0] = NA
df$SkinThickness[df$SkinThickness == 0] = NA
df$BMI[df$BMI == 0] = NA
head(df)
miss_var_summary(df)
miss_var_summary(df)
gg_miss_var(df)
miss_var_summary(df)
gg_miss_var(df)
vis_miss(df)
df
summary(df)
zero_col
miss_var_summary(df)
gg_miss_var(df)
vis_miss(df)
summary(df)
nrow()
summary(df)
nrow(df)
summary(df)
nrow(df)
df1 =df %>%
mutate(SkinThickness = ifelse(is.na(SkinThickness), mean(SkinThickness, na.rm = TRUE), SkinThickness),
BloodPressure = ifelse(is.na(BloodPressure), median(BloodPressure, na.rm = TRUE), BloodPressure))
head(df)
summary(df)
nrow(df)
df1 =df %>%
mutate(SkinThickness = ifelse(is.na(SkinThickness), mean(SkinThickness, na.rm = TRUE), SkinThickness),
BloodPressure = ifelse(is.na(BloodPressure), median(BloodPressure, na.rm = TRUE), BloodPressure))
head(df1)
library(dplyr)
library(knitr)
library(DescTools)
library(ggplot2)
library(naniar)
library(tidyr)
summary(df)
nrow(df)
df1 =df %>%
mutate(SkinThickness = ifelse(is.na(SkinThickness), mean(SkinThickness, na.rm = TRUE), SkinThickness),
BloodPressure = ifelse(is.na(BloodPressure), median(BloodPressure, na.rm = TRUE), BloodPressure))
df_clean = df1 %>%
drop_na(Glucose, BloodPressure)
head(df_clean)
summary(df)
nrow(df)
df1 =df %>%
mutate(SkinThickness = ifelse(is.na(SkinThickness), mean(SkinThickness, na.rm = TRUE), SkinThickness),
BloodPressure = ifelse(is.na(BloodPressure), median(BloodPressure, na.rm = TRUE), BloodPressure))
df_clean = df1 %>%
drop_na(Glucose, BloodPressure)
miss_var_summary(df_clean)
summary(df)
nrow(df)
df1 =df %>%
mutate(SkinThickness = ifelse(is.na(SkinThickness), mean(SkinThickness, na.rm = TRUE), SkinThickness),
BloodPressure = ifelse(is.na(BloodPressure), median(BloodPressure, na.rm = TRUE), BloodPressure))
df_clean = df1 %>%
drop_na(Glucose, BMI)
miss_var_summary(df_clean)
summary(df)
nrow(df)
df1 =df %>%
mutate(SkinThickness = ifelse(is.na(SkinThickness), mean(SkinThickness, na.rm = TRUE), SkinThickness),
BloodPressure = ifelse(is.na(BloodPressure), median(BloodPressure, na.rm = TRUE), BloodPressure))
final_df = df1 %>%
drop_na(Glucose, BMI)
miss_var_summary(final_df)
write.csv(final_df, "Output/Processed Pima Indians Diabetes", row.names = F)
write.csv(final_df, "Output/Processed Pima Indians Diabetes.csv", row.names = F)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, warning = FALSE, message = FALSE)
library(dplyr)
library(knitr)
library(DescTools)
library(ggplot2)
library(naniar)
library(tidyr)
df = read.csv("Data/Kaggle - Pima Indians Diabetes Database.csv")
head(df)
df$Outcome = as.factor(df$Outcome)
class(df$Outcome)
calculating = function(colum){
colum = as.numeric(colum)
mean_value = mean(colum)
median_value = median(colum)
mode_value = Mode(colum)
min_value = min(colum)
standard_value = sd(colum)
max_value = max(colum)
quantile = quantile(colum)
first_quantile = quantile(colum, 0.25)
third_quantile = quantile(colum, 0.75)
iqr_range = IQR(colum)
return(list(
mean = mean_value,
median = median_value,
mode= mode_value,
min = min_value,
max = max_value,
standard_deviation = standard_value,
quantile_ = quantile,
firstQuantile = first_quantile,
thirdQuantile = third_quantile,
iqrRange = iqr_range
))
}
calculating(df$Pregnancies)
calculating(df$Glucose)
calculating(df$BloodPressure)
calculating(df$SkinThickness)
calculating(df$Insulin)
calculating(df$BMI)
calculating(df$DiabetesPedigreeFunction)
calculating(df$Age)
calculating(df$Outcome)
yes_outcone = df %>%
filter(Outcome == 1)
count(yes_outcone)
histplot = function(colum){
colum = as.numeric(colum)
ggplot(data = df) +
geom_histogram(aes(x = colum, fill = Outcome, colour = "black", alpha = 0.8),
bins = 20)
}
histplot(df$Pregnancies)
histplot(df$Glucose)
histplot(df$BloodPressure)
histplot(df$Insulin)
histplot(df$BMI)
histplot(df$BMI)
histplot(df$DiabetesPedigreeFunction)
histplot(df$Age)
df %>%
ggplot(aes(x = Outcome, y = Glucose))+
geom_boxplot()+
geom_jitter()
df %>%
ggplot(aes(x = Outcome, y = Insulin))+
geom_boxplot()+
geom_jitter()
df %>%
ggplot(aes(x = Outcome, y = Insulin))+
geom_boxplot()+
geom_jitter()
df %>%
ggplot(aes(x = Outcome, y = BMI))+
geom_boxplot()+
geom_jitter()
df %>%
ggplot(aes(x = Outcome, y = Age))+
geom_boxplot()+
geom_jitter()
null_column = colSums(is.na(df))
zero_col = colSums(df==0)
df$Glucose[df$Glucose == 0] = NA
df$BloodPressure[df$BloodPressure == 0] = NA
df$SkinThickness[df$SkinThickness == 0] = NA
df$BMI[df$BMI == 0] = NA
head(df)
miss_var_summary(df)
gg_miss_var(df)
vis_miss(df)
summary(df)
nrow(df)
df1 =df %>%
mutate(SkinThickness = ifelse(is.na(SkinThickness), mean(SkinThickness, na.rm = TRUE), SkinThickness),
BloodPressure = ifelse(is.na(BloodPressure), median(BloodPressure, na.rm = TRUE), BloodPressure))
final_df = df1 %>%
drop_na(Glucose, BMI)
miss_var_summary(final_df)
write.csv(final_df, "Output/Processed Pima Indians Diabetes.csv", row.names = F)
